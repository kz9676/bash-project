#!/usr/bin/env bash 

: '

This file is part of srcmod project - command-line tool to automate creation
and maintenance of source code modules. 

The MIT License (MIT)

Copyright (c) 2015 Kostya Zolotarov

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

'

# TODO - Collect todo's from srcmod files and list them inside TASKS file

input_files=./*
output_file=./TASKS
exclude_files=(./tasks ./TASKS ./changelog ./CHANGELOG)
search_keyword=TODO
info="~~> INFO:" 
warning="~~> WARNING:" 
error="~~> ERROR:" 
ok="~~> OK:" 

for input_file in $input_files;
do
    printf "$info Selecting $input_file...\n" >&2
    # We skip over a fixed set of $exclude_files
    for exclude_file in ${exclude_files[@]};
    do 
        printf "$info Comparing $input_file and $exclude_file...\n" >&2
        if [ $input_file == $exclude_file ];
        then
            printf "$info Excluding $input_file...\n" >&2
        else 
            printf "$info Scanning $input_file...\n" >&2
            # Scan $input_file for occurence of $search_keyword 
            while read line; 
            do 
                echo $line | grep $search_keyword > /dev/null
                if [ $? == 0 ];
                then
                    echo "$input_file $line"
                fi
            done < $input_file 
        fi 
    done
done
exit 0
