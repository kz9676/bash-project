[97] DESCRIPTION -------------------------------------------------------------

Command-line utility for automated creation and maintenance of Bash source code
projects.

[98] VERSION -----------------------------------------------------------------

0.0.4.9

[99] AUTHORS -----------------------------------------------------------------

Kostya Zolotarov <kostya.zolotarov@gmail.com>

[100] BACKGROUND -------------------------------------------------------------

I needed a tool to automate creation and maintenance of Bash source code 
modules. Invoked from command line, such tool had to produce a fixed number
of templated files that would form a skeleton of my Bash project. 

From the high level, I envisioned my source modules had to resemble the
following file structure:

.
|-- ./README
|-- ./VERSION
|-- ./AUTHORS
|-- ./CHANGELOG
|-- ./TASKS
|-- ./DEFECTS
|-- ./BUILD
|-- ./INSTALL
|-- ./LICENSES
|-- ./sourcefile.X
|-- ./sourcefile.Y
|-- ./sourcefile.Z
|-- ./library.name.X
|-- ./library.name.Y
|-- ./library.name.Z
|-- ./settings.feature.X
|-- ./settings.feature.Y
|-- ./settings.feature.Z
\-- etc.

[101] FEATURES ---------------------------------------------------------------

    * setup - Setup new source module 
    * build - Build the source module 
    * readme - Build/update the source module README file 
    * files - Build/update the source module FILES file 
    * tasks - Build/update the source module TASKS file 
    * authors - Build/update list of the source module contributors
    * changelog - Build/update the source module CHANGELOG file 
    * version - Increment the source module version inside VERSION file 
    * install - Install the source module 
    * uninstall - Uninstall the source module 

[102] DESIGN -----------------------------------------------------------------

The 'project' consists of two key parts:

    * Application files 
    * Source files

1. Application Files

Commands 
    * project 

Functions

    * project_authors 
    * project_build 
    * project_changelog 
    * project_files 
    * project_install 
    * project_package 
    * project_readme 
    * project_setup 
    * project_tasks 
    * project_uninstall 

2. Source files

The source project files consist of everything that belongs to a given source
project. In the current release, definition of a source project includes:

    * Documents 
    * Templates 
    * Executables 
    * Libraries 
    * Functions 
    * Variables 
    * Options 
    * Configurations 
    * Tests

In closer detail, elements of a source project include the following:

    * Documents 

        * ./API 
        * ./AUTHORS 
        * ./BACKGROUND 
        * ./BUILD 
        * ./CHANGELOG 
        * ./DEFECTS 
        * ./DEPENDENCIES 
        * ./DESCRIPTION 
        * ./DESIGN
        * ./EXAMPLES
        * ./FEATURES 
        * ./INSTALL 
        * ./LICENSE
        * ./README 
        * ./REQUIREMENTS 
        * ./SOURCES 
        * ./TASKS 
        * ./TEST 
        * ./VERSION 

    * Templates

        * ./template.bash.executable 
        * ./template.bash.variable 
        * ./template.bash.function 
        * ./template.bash.test 
        * ./template.bash.configuration 
        * ./template.gitignore 

    * Variables

        * ./variable.[name]
        * ./variable.[name]
        * etc. 

    * Functions

        * ./function.[name]
        * ./function.[name]
        * etc. 

    * Options

        * ./option.[name]
        * ./option.[name]

    * Tests

        * ./test.[name]
        * ./test.[name]
        * etc. 

    * Configurations

        * ./configuration.[name]
        * ./configuration.[name]
        * etc. 

[103] SOURCES ----------------------------------------------------------------

Source code can be obtained on GitHub (https://github.com/kz9676/srcmod).

Presently, I have one active branch:

    * origin/development  - is the main branch where the source code of HEAD
                            always reflects a state with the latest delivered
                            development changes for the next release

[104] INSTALL ----------------------------------------------------------------

The following command gets bash-project installed in a local host environment:

    $ bash ./project install
    $ bash ./project uninstall

[105] FILES ------------------------------------------------------------------

.
|--  ./API
|--  ./AUTHORS
|--  ./BACKGROUND
|--  ./BUILD
|--  ./CHANGELOG
|--  ./configuration.directory
|--  ./configuration.file
|--  ./configuration.log
|--  ./configuration.project
|--  ./configuration.version
|--  ./DEFECTS
|--  ./DEPENDENCIES
|--  ./DESCRIPTION
|--  ./DESIGN
|--  ./directory
|--  ./directory_assert
|--  ./directory_assert_copied
|--  ./directory_assert_created
|--  ./directory_assert_deleted
|--  ./directory_assert_empty
|--  ./directory_assert_found
|--  ./directory_assert_moved
|--  ./directory_assert_read
|--  ./directory_assert_renamed
|--  ./directory_assert_written
|--  ./directory_copy
|--  ./directory_create
|--  ./directory_delete
|--  ./directory_find
|--  ./directory_move
|--  ./directory_rename
|--  ./EXAMPLES
|--  ./FEATURES
|--  ./file
|--  ./file_assert
|--  ./file_assert_copied
|--  ./file_assert_created
|--  ./file_assert_deleted
|--  ./file_assert_empty
|--  ./file_assert_found
|--  ./file_assert_moved
|--  ./file_assert_read
|--  ./file_assert_renamed
|--  ./file_assert_written
|--  ./file_copy
|--  ./file_create
|--  ./file_delete
|--  ./file_find
|--  ./file_move
|--  ./file_read
|--  ./file_rename
|--  ./FILES
|--  ./file_write
|--  ./INSTALL
|--  ./LICENSE
|--  ./log
|--  ./log_error
|--  ./log_information
|--  ./log_success
|--  ./log_warning
|--  ./project
|--  ./project_authors
|--  ./project_build
|--  ./project_changelog
|--  ./project_files
|--  ./project_install
|--  ./project_package
|--  ./project_readme
|--  ./project_setup
|--  ./project_tasks
|--  ./project_uninstall
|--  ./project_version
|--  ./README
|--  ./REQUIREMENTS
|--  ./SOURCES
|--  ./tags
|--  ./TASKS
|--  ./template.bash.configuration
|--  ./template.bash.executable
|--  ./template.bash.function
|--  ./template.bash.test
|--  ./template.bash.variable
|--  ./template.gitignore
|--  ./TEST
|--  ./test.file_assert
|--  ./test.file_copy
|--  ./test.file_create
|--  ./test.file_delete
|--  ./test.file_find
|--  ./test.file_move
|--  ./test.file_read
|--  ./test.file_rename
|--  ./test.file_write
|--  ./VERSION
|--  ./version
\--  ./version_increment

96 files

[106] LICENSE ----------------------------------------------------------------

The MIT License (MIT)

Copyright (c) 2015-2020 Kostya Zolotarov

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

