#!/usr/bin/env bash 

: '

The MIT License (MIT)

Copyright (c) 2015-2020 Kostya Zolotarov

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

'

. ./configuration.project
. ./log

project_install() {

    application_configuration_files=./configuration.*

    for configuration in ${application_configuration_files[@]};
    do

        if [ -f $configuration ];
        then
            log information "Installing $configuration ..."
            . $configuration

            ## Executables

            # System prefix

            if [ ! -d $application_executables_path ];
            then
                log warning "Application executables directory is not found - $application_executables_path"
                log information "Creating application executables directory - $application_executables_path"
                mkdir -p $application_executables_path
                if [ $? = 0 ];
                then 
                    log success "Created application executables directory - $application_executables_path"
                else 
                    log error "Failed to create application executables directory - $application_executables_path"
                fi 
            fi 

            for file in ${application_executable_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -f -v ./$file $application_executables_path/$file
                else
                    bash ./$file.template
                    cp -f -v ./$file.build $application_executables_path/$file
                fi 
                chmod +x -v $application_executables_path/$file
            done

            # User prefix

            if [ ! -d $user_executables_path ];
            then
                log warning "User executables directory is not found - $user_executables_path"
                log information "Creating user executables directory - $user_executables_path"
                mkdir -p $user_executables_path
                if [ $? = 0 ];
                then 
                    log success "Created user executables directory - $user_executables_path"
                else 
                    log error "Failed to create user executables directory - $user_executables_path"
                fi 
            fi 

            for file in ${user_executable_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -f -v ./$file $user_executables_path/${user_name}-$file
                else
                    bash ./$file.template
                    cp -f -v ./$file.build $user_executables_path/${user_name}-$file
                fi 
                chmod +x -v $user_executables_path/${user_name}-$file
            done

            ## Libraries

            # System prefix

            if [ ! -d $application_libraries_path ];
            then
                log warning "Application libraries directory is not found - $application_libraries_path"
                log information "Creating application libraries directory - $application_libraries_path"
                mkdir -p $application_libraries_path
                if [ $? = 0 ];
                then 
                    log success "Created application libraries directory - $application_libraries_path"
                else 
                    log error "Failed to create application libraries directory - $application_libraries_path"
                fi 
            fi 

            for file in ${application_library_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -v ./$file $application_libraries_path/$file 
                else
                    bash ./$file.template
                    cp -v ./$file.build $application_libraries_path/$file 
                fi 
            done

            # User prefix

            if [ ! -d $user_libraries_path ];
            then
                log warning "User libraries directory is not found - $user_libraries_path"
                log information "Creating user libraries directory - $user_libraries_path"
                mkdir -p $user_libraries_path
                if [ $? = 0 ];
                then 
                    log success "Created user libraries directory - $user_libraries_path"
                else 
                    log error "Failed to create user libraries directory - $user_libraries_path"
                fi 
            fi 

            for file in ${user_library_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -v ./$file $user_libraries_path/$file 
                else
                    bash ./$file.template
                    cp -v ./$file.build $user_libraries_path/$file 
                fi 
            done

            ## Configurations

            # System prefix

            if [ ! -d $application_configurations_path ];
            then
                log warning "Application configurations directory is not found - $application_configurations_path"
                log information "Creating application configurations directory - $application_configurations_path"
                mkdir -p $application_configurations_path
                if [ $? = 0 ];
                then 
                    log success "Created application configurations directory - $application_configurations_path"
                else 
                    log error "Failed to create application configurations directory - $application_configurations_path"
                fi 
            fi 

            for file in ${application_configuration_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -v ./$file $application_configurations_path/$file 
                else
                    bash ./$file.template
                    cp -v ./$file.build $application_configurations_path/$file 
                fi 
            done

            # User prefix

            if [ ! -d $user_configurations_path ];
            then
                log warning "User configurations directory is not found - $user_configurations_path"
                log information "Creating user configurations directory - $user_configurations_path"
                mkdir -p $user_configurations_path
                if [ $? = 0 ];
                then 
                    log success "Created user configurations directory - $user_configurations_path"
                else 
                    log error "Failed to create user configurations directory - $user_configurations_path"
                fi 
            fi 

            for file in ${user_configuration_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -v ./$file "$user_configurations_path"."$application_name"
                else
                    bash ./$file.template
                    cp -v ./$file.build "$user_configurations_path"."$application_name"
                fi 
            done

            ## Templates

            # System prefix

            if [ ! -d $application_templates_path ];
            then
                log warning "Application templates directory is not found - $application_templates_path"
                log information "Creating application templates directory - $application_templates_path"
                mkdir -p $application_templates_path
                if [ $? = 0 ];
                then 
                    log success "Created application templates directory - $application_templates_path"
                else 
                    log error "Failed to create application templates directory - $application_templates_path"
                fi 
            fi 

            for file in ${application_template_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -v ./$file $application_templates_path/$file
                else
                    bash ./$file.template
                    cp -v ./$file.build $application_templates_path/$file
                fi 
            done

            # User prefix

            if [ ! -d $user_templates_path ];
            then
                log warning "User templates directory is not found - $user_templates_path"
                log information "Creating user templates directory - $user_templates_path"
                mkdir -p $user_templates_path
                if [ $? = 0 ];
                then 
                    log success "Created user templates directory - $user_templates_path"
                else 
                    log error "Failed to create user templates directory - $user_templates_path"
                fi 
            fi 

            for file in ${user_template_files[@]};
            do
                log information "Installing $file ..."
                if [ -f $file ];
                then
                    cp -v ./$file $user_templates_path/$file
                else
                    bash ./$file.template
                    cp -v ./$file.build $user_templates_path/$file
                fi 
            done

            ## Logs

            # System prefix

            if [ ! -d $application_logs_path ];
            then
                log warning "Application logs directory is not found - $application_logs_path"
                log information "Creating application logs directory - $application_logs_path"
                mkdir -p $application_logs_path
                if [ $? = 0 ];
                then 
                    log success "Created application logs directory - $application_logs_path"
                else 
                    log error "Failed to create application logs directory - $application_logs_path"
                fi 
            fi 

            # User prefix

            if [ ! -d $user_logs_path ];
            then
                log warning "User logs directory is not found - $user_logs_path"
                log information "Creating user logs directory - $user_logs_path"
                mkdir -p $user_logs_path
                if [ $? = 0 ];
                then 
                    log success "Created user logs directory - $user_logs_path"
                else 
                    log error "Failed to create user logs directory - $user_logs_path"
                fi 
            fi 

        fi 
    done

}
