. ./configuration.project
cat > ./project_wizard.build <<-EOF
#!/usr/bin/env bash

: '

The MIT License (MIT)

Copyright (c) 2020 Kostya Zolotarov

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

'

. $application_executables_path/log

EOF
printf '
project=$2
target=$3
name=$4

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  help
#   DESCRIPTION:  Print usage instructions.  
#    PARAMETERS:  None 
#       RETURNS:  0 if the the new project workspace is created successfully. 
#-------------------------------------------------------------------------------
help() {
    
    echo $"Usage: "${0##*/}" {c|bash} cli"

}

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  bash_project
#   DESCRIPTION:  Create Bash command line interface executable project.  
#    PARAMETERS:  Project target and project name. 
#       RETURNS:  0 if the the new project workspace is created successfully. 
#-------------------------------------------------------------------------------
bash_project() {

    case $target in

        # Bash CLI executable
        cli)
            log information "Initializing Bash project target..."
            mkdir $name
            cd $name
            project setup
            ln -s $HOME/Sources/makefiles/src/Makefile.debian.bash Makefile
            make setup
            ;;

        *)
            help
            ;;

    esac

}

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  c_project
#   DESCRIPTION:  Create C command line interface executable project.  
#    PARAMETERS:  Project target and project name. 
#       RETURNS:  0 if the the new project workspace is created successfully. 
#-------------------------------------------------------------------------------
c_project() {

    case $target in

        # C CLI executable
        cli)
            log information "Initializing C project target..."
            mkdir $name
            cd $name
            project setup
            ln -s $HOME/Sources/makefiles/src/Makefile.multiplatform.gcc Makefile
            make setup
            ;;

        *)
            help
            ;;

    esac

}

#---  FUNCTION  ----------------------------------------------------------------
#          NAME:  project_wizard
#   DESCRIPTION:  Create new software development project.  
#    PARAMETERS:  Project, target and name. 
#       RETURNS:  0 if the the new project workspace is created successfully. 
#-------------------------------------------------------------------------------
project_wizard() {

    case $project in

        # Bash project
        bash)
            log information "Generating Bash project ..."
            bash_project $target $name
            ;;

        # C project
        c)
            log information "Generating C project ..."
            c_project $target $name
            ;;

        *)
            help
            ;;

    esac

}' >> ./project_wizard.build

